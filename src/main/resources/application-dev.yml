server:
  port: 80
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      force: true
      enabled: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(KgM8OzzgPpdhF9G5XzzNIMR7xmVAERFPrphxa3X/MvX5TO4AHY6GsVFw2Cs9U1NQjTnNIHkjcAU8eWdz9C0HrbIEhL65fqU6)
    username: ENC(6R/c31GTSL0h+tEDEJr8pA==)
    password: ENC(qZRj27Us+5WqWEaxLwBuZ2by25Mpwf+eF2TsEMIdTys=)
  mvc:
    static-path-pattern: /**
  thymeleaf:
    prefix: classpath:/templates/    # 템플릿 위치
    suffix: .html                    # 확장자
    cache: false                     # 개발 환경에서는 false 권장
    encoding: UTF-8
    mode: HTML
  web:
    resources:
      static-locations: classpath:/static/
  redis:
    host: ${REDIS_SERVER_URL}
    port: 6379
    password: ${REDIS_PASSWORD}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ENC(aJXkjRnsjBd1oufOMb6g6ym/WMkhfVcineV1rQmBUXE=)
    password: ENC(nNbCejUSACUyBVRTVIe4FtMbjnafJu3tKrbRyYln9HU=)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
        debug: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ENC(HLsxmwnKpVf/4v3pYCG7sSL2xSCWz+BqIiQVsb7SjGG5Ksvu/LtEdH0zOSDmz+73agjjId6hCLxukEJpdIMyu5iWCqIF+qen+Q6dWGuu/XIAZhqOauDZ/g==)
            client-secret: ENC(WSLzpXuolZOfzgTf+qjrr6Gf4RSkryMKPPJ4Le60XGoORSEepi3YEFXHEBIX97Gj)
            scope:
              - email
              - profile
          github:
            client-id: ENC(lc8/CuA09F9qPFY527byag6IqKHI/6IYbhVnrLF1Dts=)
            client-secret: ENC(FfWgdnhn8cOC2Tkg+lktEmRUhpqJCWDVb5Zr0ZEjuOqf6C7/nYQKr9xTCCrg8Loe4p1Pwxt6ymk=)
            scope:
              - read:user
              - user:email
          naver:
            client-id: ENC(HO3324HgczX77NrMgF/88ccosv5GxBaezYAVQTR1Btk=)
            client-secret: ENC(PfLVdY8hOQyC4UvllGWwTditGV95nLJF)
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
#          kakao:
#            client-id: ENC(MrXAKAzMWl5JrPEbEUDrMXXG0hAjQmUMvJnU2mowB2EzmrzazAIrh9EiZbPXMwie)
#            client-secret: ENC(GqWkolzYoqclOmXTi9MeNugW9yH3j6h8Ig6ouynPgFpq4Rq9dHMw2GyxpJrPBBbD)
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#            authorization-grant-type: authorization_code
#            client-authentication-method: client_secret_post
#            scope:
#              - profile_nickname
#              - profile_image
#              - account_email
#            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
#          kakao:
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            token-uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-name-attribute: id

mybatis:
  mapper-locations: classpath:mapper/**/*.xml
  type-handlers-package: com.qrystal.app.question.handler
  configuration:
    map-underscore-to-camel-case: true
    default-enum-type-handler: org.apache.ibatis.type.EnumTypeHandler

logging:
  config: classpath:logback-spring.xml
  level:
    com.qrystal: DEBUG
  charset:
    console: UTF-8
    file: UTF-8
jasypt:
  encryptor:
    password: ${JASYPT_ENCRYPTOR_PASSWORD}
    algorithm: PBEWithMD5AndDES