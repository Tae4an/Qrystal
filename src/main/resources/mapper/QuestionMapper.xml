<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qrystal.app.question.mapper.QuestionMapper">

    <resultMap id="QuestionResultMap" type="com.qrystal.app.question.model.Question">
        <id property="id" column="id"/>
        <result property="categoryId" column="category_id"/>
        <result property="userId" column="user_id"/>
        <result property="typeId" column="type_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="answer" column="answer"/>
        <result property="explanation" column="explanation"/>
        <result property="difficulty" column="difficulty"/>
        <result property="isPublic" column="is_public"/>
        <result property="status" column="status"
                typeHandler="com.qrystal.app.question.handler.QuestionStatusTypeHandler"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="categoryName" column="category_name"/>
        <result property="userName" column="user_name"/>
        <result property="typeName" column="type_name"/>
        <collection property="choices" column="id" select="findChoicesByQuestionId"/>
        <collection property="tags" column="id" select="findTagsByQuestionId"/>
    </resultMap>

    <select id="findAll" resultMap="QuestionResultMap">
        WITH RECURSIVE CategoryHierarchy AS (
        /* 시작 카테고리 */
        SELECT id, parent_id, level
        FROM categories
        <if test="categoryId != null">
            WHERE id = #{categoryId}
        </if>
        <if test="categoryId == null">
            WHERE parent_id IS NULL
        </if>

        UNION ALL

        /* 하위 카테고리들 */
        SELECT c.id, c.parent_id, c.level
        FROM categories c
        INNER JOIN CategoryHierarchy ch ON c.parent_id = ch.id
        )
        SELECT DISTINCT
        q.*,
        c.name as category_name,
        u.name as user_name,
        t.name as type_name
        FROM questions q
        LEFT JOIN categories c ON q.category_id = c.id
        LEFT JOIN users u ON q.user_id = u.id
        LEFT JOIN question_types t ON q.type_id = t.id
        <where>
            <if test="categoryId != null">
                AND q.category_id IN (SELECT id FROM CategoryHierarchy)
            </if>
            <if test="userId != null">
                AND q.user_id = #{userId}
            </if>
            <if test="typeId != null">
                AND q.type_id = #{typeId}
            </if>
            <if test="status != null">
                AND q.status = #{status, javaType=com.qrystal.app.question.domain.QuestionStatus, typeHandler=org.apache.ibatis.type.EnumTypeHandler}
            </if>
            <if test="isPublic != null">
                AND q.is_public = #{isPublic}
            </if>
        </where>
        ORDER BY q.created_at DESC
    </select>

    <select id="findById" resultMap="QuestionResultMap">
        SELECT
            q.*,
            c.name as category_name,
            u.name as user_name,
            t.name as type_name
        FROM questions q
                 LEFT JOIN categories c ON q.category_id = c.id
                 LEFT JOIN users u ON q.user_id = u.id
                 LEFT JOIN question_types t ON q.type_id = t.id
        WHERE q.id = #{id}
    </select>

    <insert id="save" parameterType="com.qrystal.app.question.model.Question"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO questions (
            category_id,
            user_id,
            type_id,
            title,
            content,
            answer,
            explanation,
            difficulty,
            is_public,
            status
        ) VALUES (
                     #{categoryId},
                     #{userId},
                     #{typeId},
                     #{title},
                     #{content},
                     #{answer},
                     #{explanation},
                     #{difficulty},
                     #{isPublic},
                     #{status}
                 )
    </insert>

    <update id="update" parameterType="com.qrystal.app.question.model.Question">
        UPDATE questions
        SET
            title = #{title},
            content = #{content},
            answer = #{answer},
            explanation = #{explanation},
            difficulty = #{difficulty},
            is_public = #{isPublic},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE questions
        SET status = #{status},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM questions WHERE id = #{id}
    </delete>

    <!-- 객관식 보기 관리 -->
    <insert id="saveChoices">
        INSERT INTO question_choices (
        question_id,
        choice_number,
        content
        ) VALUES
        <foreach collection="choices" item="choice" separator=",">
            (#{questionId}, #{choice.choiceNumber}, #{choice.content})
        </foreach>
    </insert>

    <delete id="deleteChoices">
        DELETE FROM question_choices WHERE question_id = #{questionId}
    </delete>

    <select id="findChoicesByQuestionId" resultType="com.qrystal.app.question.model.QuestionChoice">
        SELECT * FROM question_choices
        WHERE question_id = #{questionId}
        ORDER BY choice_number
    </select>

    <!-- 태그 관리 -->
    <insert id="saveTags">
        INSERT INTO question_tags (question_id, tag_id)
        SELECT #{questionId}, id FROM tags
        WHERE name IN
        <foreach collection="tags" item="tag" open="(" separator="," close=")">
            #{tag}
        </foreach>
    </insert>

    <delete id="deleteTags">
        DELETE FROM question_tags WHERE question_id = #{questionId}
    </delete>

    <select id="findTagsByQuestionId" resultType="string">
        SELECT t.name
        FROM tags t
                 JOIN question_tags qt ON t.id = qt.tag_id
        WHERE qt.question_id = #{questionId}
        ORDER BY t.name
    </select>

</mapper>